{"ast":null,"code":"export default {\n  name: 'FormTag',\n  props: ['method', 'action', 'name', 'event'],\n  methods: {\n    submit() {\n      let myForm = this.$refs[this.$props['event']];\n\n      if (myForm.checkValidity()) {\n        console.log(\"My event name\", this.$props['event']);\n        console.log('Name', this.$props.name);\n        this.$emit(this.$props['event']);\n      }\n    }\n\n  },\n\n  mounted() {\n    (function () {\n      'use strict'; // Fetch all the forms we want to apply custom Bootstrap validation styles to\n\n      var forms = document.querySelectorAll('.needs-validation'); // Loop over them and prevent submission\n\n      Array.prototype.slice.call(forms).forEach(function (form) {\n        form.addEventListener('submit', function (event) {\n          if (!form.checkValidity()) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n\n          form.classList.add('was-validated');\n        }, false);\n      });\n    })();\n  }\n\n};","map":{"version":3,"mappings":"AAeA,eAAe;EACbA,IAAI,EAAE,SADO;EAEbC,KAAK,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,EAA6B,OAA7B,CAFM;EAGbC,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAIC,MAAK,GAAI,KAAKC,KAAL,CAAW,KAAKC,MAAL,CAAY,OAAZ,CAAX,CAAb;;MAEA,IAAIF,MAAM,CAACG,aAAP,EAAJ,EAA4B;QAC1BC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKH,MAAL,CAAY,OAAZ,CAA7B;QACAE,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKH,MAAL,CAAYN,IAAhC;QACA,KAAKU,KAAL,CAAW,KAAKJ,MAAL,CAAY,OAAZ,CAAX;MACF;IACF;;EATO,CAHI;;EAcbK,OAAO,GAAG;IACR,CAAC,YAAY;MACX,aADW,CAGX;;MACA,IAAIC,KAAI,GAAIC,QAAQ,CAACC,gBAAT,CAA0B,mBAA1B,CAAZ,CAJW,CAMX;;MACAC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BN,KAA3B,EACKO,OADL,CACa,UAAUC,IAAV,EAAgB;QACvBA,IAAI,CAACC,gBAAL,CAAsB,QAAtB,EAAgC,UAAUC,KAAV,EAAiB;UAC/C,IAAI,CAACF,IAAI,CAACb,aAAL,EAAL,EAA2B;YACzBe,KAAK,CAACC,cAAN;YACAD,KAAK,CAACE,eAAN;UACF;;UAEAJ,IAAI,CAACK,SAAL,CAAeC,GAAf,CAAmB,eAAnB;QACD,CAPD,EAOG,KAPH;MAQD,CAVL;IAWD,CAlBD;EAmBF;;AAlCa,CAAf","names":["name","props","methods","submit","myForm","$refs","$props","checkValidity","console","log","$emit","mounted","forms","document","querySelectorAll","Array","prototype","slice","call","forEach","form","addEventListener","event","preventDefault","stopPropagation","classList","add"],"sourceRoot":"","sources":["/home/vlad/vue-app/src/components/forms/FormTag.vue"],"sourcesContent":["<template>\n  <form\n      @submit.prevent = \"submit\"\n      :ref=\"name\"\n      :event=\"event\"\n      autocomplete=\"off\"\n      :method=\"method\"\n      :action=\"action\"\n      class=\"needs-validation\"\n      novalidate>\n    <slot></slot>\n  </form>\n</template>\n\n<script>\nexport default {\n  name: 'FormTag',\n  props: ['method', 'action', 'name', 'event'],\n  methods: {\n    submit() {\n      let myForm = this.$refs[this.$props['event']];\n\n      if (myForm.checkValidity()) {\n        console.log(\"My event name\", this.$props['event'])\n        console.log('Name', this.$props.name);\n        this.$emit(this.$props['event']);\n      }\n    }\n  },\n  mounted() {\n    (function () {\n      'use strict'\n\n      // Fetch all the forms we want to apply custom Bootstrap validation styles to\n      var forms = document.querySelectorAll('.needs-validation')\n\n      // Loop over them and prevent submission\n      Array.prototype.slice.call(forms)\n          .forEach(function (form) {\n            form.addEventListener('submit', function (event) {\n              if (!form.checkValidity()) {\n                event.preventDefault()\n                event.stopPropagation()\n              }\n\n              form.classList.add('was-validated')\n            }, false)\n          })\n    })()\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}