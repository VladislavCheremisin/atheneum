{"ast":null,"code":"import { renderSlot as _renderSlot, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"event\", \"method\", \"action\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.submit && $options.submit(...args), [\"prevent\"])),\n    ref: $props.name,\n    event: $props.event,\n    autocomplete: \"off\",\n    method: $props.method,\n    action: $props.action,\n    class: \"needs-validation\",\n    novalidate: \"\"\n  }, [_renderSlot(_ctx.$slots, \"default\")], 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_1);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAUO,MAVP,EAUO;IATFC,QAAM,wDAAYC,2CAAZ,EAAkB,WAAlB,EASJ;IARFC,GAAG,EAAEC,WAQH;IAPFC,KAAK,EAAED,YAOL;IANHE,YAAY,EAAC,KAMV;IALFC,MAAM,EAAEH,aAKN;IAJFI,MAAM,EAAEJ,aAIN;IAHHK,KAAK,EAAC,kBAGH;IAFHC,UAAU,EAAV;EAEG,CAVP,GASEC,YAAaC,WAAb,EAAa,SAAb,EATF;;EAAA","names":["_createElementBlock","onSubmit","$options","ref","$props","event","autocomplete","method","action","class","novalidate","_renderSlot","_ctx"],"sourceRoot":"","sources":["/home/vlad/vue-app/src/components/forms/FormTag.vue"],"sourcesContent":["<template>\n  <form\n      @submit.prevent = \"submit\"\n      :ref=\"name\"\n      :event=\"event\"\n      autocomplete=\"off\"\n      :method=\"method\"\n      :action=\"action\"\n      class=\"needs-validation\"\n      novalidate>\n    <slot></slot>\n  </form>\n</template>\n\n<script>\nexport default {\n  name: 'FormTag',\n  props: ['method', 'action', 'name', 'event'],\n  methods: {\n    submit() {\n      let myForm = this.$refs[this.$props['event']];\n\n      if (myForm.checkValidity()) {\n        console.log(\"My event name\", this.$props['event'])\n        console.log('Name', this.$props.name);\n        this.$emit(this.$props['event']);\n      }\n    }\n  },\n  mounted() {\n    (function () {\n      'use strict'\n\n      // Fetch all the forms we want to apply custom Bootstrap validation styles to\n      var forms = document.querySelectorAll('.needs-validation')\n\n      // Loop over them and prevent submission\n      Array.prototype.slice.call(forms)\n          .forEach(function (form) {\n            form.addEventListener('submit', function (event) {\n              if (!form.checkValidity()) {\n                event.preventDefault()\n                event.stopPropagation()\n              }\n\n              form.classList.add('was-validated')\n            }, false)\n          })\n    })()\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}